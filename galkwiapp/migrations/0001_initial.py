# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-31 06:09
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='제목')),
            ],
            options={
                'verbose_name_plural': 'Entries',
            },
        ),
        migrations.CreateModel(
            name='Revision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(0, '편집 중'), (1, '리뷰 중'), (2, '취소'), (3, '허용'), (4, '거절'), (5, '대체됨')], verbose_name='상태')),
                ('deleted', models.BooleanField(default=False, verbose_name='삭제')),
                ('comment', models.CharField(blank=True, max_length=1000, verbose_name='설명')),
                ('timestamp', models.DateTimeField(verbose_name='제안 시각')),
                ('review_comment', models.CharField(blank=True, max_length=1000, verbose_name='리뷰 설명')),
                ('review_timestamp', models.DateTimeField(blank=True, null=True, verbose_name='리뷰 시각')),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='galkwiapp.Entry', verbose_name='단어 항목')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='galkwiapp.Revision', verbose_name='이전 리비전')),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewer', to=settings.AUTH_USER_MODEL, verbose_name='리뷰어')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='편집자')),
            ],
            options={
                'permissions': [('can_suggest', 'Can suggest a change'), ('can_review', 'Can review a suggestion')],
                'ordering': ['-timestamp', 'status'],
            },
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=100, verbose_name='단어')),
                ('pos', models.CharField(choices=[('명사', '명사'), ('동사', '동사'), ('형용사', '형용사'), ('부사', '부사'), ('대명사', '대명사'), ('감탄사', '감탄사'), ('관형사', '관형사'), ('특수:금지어', '특수:금지어'), ('특수:파생형', '특수:파생형')], max_length=100, verbose_name='품사')),
                ('props', models.CharField(blank=True, max_length=100, verbose_name='속성')),
                ('stem', models.CharField(blank=True, max_length=100, verbose_name='어근')),
                ('etym', models.CharField(blank=True, max_length=100, verbose_name='어원')),
                ('orig', models.CharField(blank=True, max_length=100, verbose_name='본딧말')),
                ('description', models.CharField(blank=True, max_length=1000, verbose_name='설명')),
            ],
        ),
        migrations.AlterIndexTogether(
            name='word',
            index_together=set([('word', 'pos')]),
        ),
        migrations.AddField(
            model_name='revision',
            name='word',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='galkwiapp.Word', verbose_name='단어 데이터'),
        ),
        migrations.AddField(
            model_name='entry',
            name='latest',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='revision_latest', to='galkwiapp.Revision'),
        ),
    ]
